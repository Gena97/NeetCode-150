func largestRectangleArea(heights []int) int {
	ret := 0                   // Переменная для хранения максимальной площади.
	size := len(heights)       // Количество столбцов в гистограмме.
	stack := []Bar{Bar{-1, 0}} // Стек, используемый для отслеживания индексов и высот столбцов.

	// Проходим по каждому столбцу в гистограмме.
	for i := 0; i < size; i++ {
		last := len(stack) - 1       // Получаем последний элемент стека.
		height := stack[last].Height // Высота столбца, находящегося на вершине стека.

		// Если текущая высота столбца меньше высоты столбца в вершине стека,
		// это означает, что мы нашли потенциальный прямоугольник.
		if heights[i] < height {
			width := i - stack[last-1].Index - 1 // Вычисляем ширину прямоугольника.

			// Обновляем максимальную площадь, если текущая площадь больше.
			ret = max(ret, height*width)

			// Убираем столбцы из стека, пока текущая высота больше высоты столбца в вершине стека.
			stack = stack[:last]
			i-- // Не увеличиваем индекс, чтобы проверить новый столбец.
		} else if heights[i] > height {
			// Если текущая высота больше, чем высота столбца в вершине стека,
			// добавляем текущий столбец и его индекс в стек.
			stack = append(stack, Bar{i, heights[i]})
		} else {
			// Если текущая высота равна высоте столбца в вершине стека,
			// обновляем индекс столбца в вершине стека.
			stack[last].Index = i
		}
	}

	// После первого прохода по гистограмме проверяем оставшиеся столбцы в стеке
	// и вычисляем площадь прямоугольников, которые могли образоваться до конца гистограммы.
	for i := len(stack) - 1; i > 0; i-- {
		height := stack[i].Height            // Высота столбца.
		width := size - stack[i-1].Index - 1 // Ширина прямоугольника.

		// Обновляем максимальную площадь, если текущая площадь больше.
		ret = max(ret, height*width)
	}

	return ret // Возвращаем максимальную площадь.
}

// Структура Bar представляет столбец гистограммы и его индекс.
type Bar struct {
	Index  int
	Height int
}

// Функция max принимает два целых числа и возвращает большее из них.
func max(a, b int) int {
	if a > b {
		return a
	}
	return b
}
